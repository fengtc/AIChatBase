@using Microsoft.AspNetCore.Mvc.ViewFeatures
@using AIChatBase.Data.Models.Customs
@using System.Net
@inject IFileVersionProvider FileVersionProvider
@inject IHostEnvironment Env
@inject UserInitialState _userInitialState

<!DOCTYPE html>
<html lang="en" >
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0,user-scalable=no" />

    <base href="/" />
    <link href=@AppendVersion("_content/DevExpress.Blazor.Themes/blazing-berry.bs5.min.css") rel="stylesheet" />
    <link href=@AppendVersion("css/blazor-custom.css") rel="stylesheet" />

    @DxResourceManager.RegisterScripts()
    <link href=@AppendVersion("css/site.css") asp-append-version="true" rel="stylesheet" />
    <link href=@AppendVersion("AIChatBase.styles.css") asp-append-version="true" rel="stylesheet" />
    <script src=@AppendVersion("js/wwLogin-1.0.0.js") asp-append-version="true"></script>
    <script src=@AppendVersion("js/site.js") asp-append-version="true"></script>
    <HeadOutlet @rendermode="new InteractiveServerRenderMode(prerender: false)"/>
</head>
<body>
    <Routes @rendermode="new InteractiveServerRenderMode(prerender: false)" _userInitialState="_userInitialState" />
    <div id="blazor-error-ui">
        @if (Env.IsDevelopment())
        {
            <text>
                发生了一个未处理的异常。详细信息请参见浏览器开发工具。
            </text>
        }
        else
        {
            <text>
                发生错误。此应用程序在重新加载之前可能不再响应。
            </text>
        }
        <a href="" class="reload">重新加载</a>
        <a class="dismiss">🗙</a>
    </div>
    <script src="_framework/blazor.web.js" autostart="false"></script>
    <script src=@AppendVersion("js/boot.js") asp-append-version="true"></script>
</body>

</html>

@code{
    private string AppendVersion(string path) => FileVersionProvider.AddFileVersionToPath("/", path);

    [CascadingParameter]
    private HttpContext httpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _userInitialState.UserAgent = GetAgent();
        _userInitialState.IP = GetIP();
    }

    //获取IP信息
    string? GetIP()
    {
        string ip;
        if (httpContext.Request.Headers.Keys.Contains("X-Forwarded-For", StringComparer.OrdinalIgnoreCase))
        {
            ip = IPAddress.Parse(httpContext.Request.Headers["X-Forwarded-For"].ToString().Split(',')[0]).ToString();
        }
        else
        {
            ip = httpContext.Connection.RemoteIpAddress.ToString();
        }

        return ip;
    }

    string? GetAgent()
    {
        return httpContext.Request.Headers["User-Agent"].ToString();

    }
}